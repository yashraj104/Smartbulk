rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {
    // Users can read and write their own user documents
    match /users/{userId} {
      allow read, write: if request.auth != null && request.auth.uid == userId;
    }
    
    // Allow authenticated users to read and write posts
    match /posts/{postId} {
      allow read: if request.auth != null;
      allow create: if request.auth != null && request.auth.uid == request.resource.data.authorId;
      allow update: if request.auth != null && (
        request.auth.uid == resource.data.authorId || 
        // Allow updating likes/comments
        (request.resource.data.diff(resource.data).affectedKeys().hasOnly(['likes', 'comments', 'updatedAt']))
      );
      allow delete: if request.auth != null && request.auth.uid == resource.data.authorId;
    }
    
    // Allow authenticated users to read and write comments
    match /posts/{postId}/comments/{commentId} {
      allow read: if request.auth != null;
      allow create: if request.auth != null && request.auth.uid == request.resource.data.authorId;
      allow update: if request.auth != null && request.auth.uid == resource.data.authorId;
      allow delete: if request.auth != null && request.auth.uid == resource.data.authorId;
    }
    
    // Allow authenticated users to read and write challenges
    match /challenges/{challengeId} {
      allow read: if request.auth != null;
      allow create: if request.auth != null && request.auth.uid == request.resource.data.creatorId;
      allow update: if request.auth != null && (
        request.auth.uid == resource.data.creatorId ||
        // Allow joining challenges
        (request.resource.data.diff(resource.data).affectedKeys().hasOnly(['participants', 'updatedAt']))
      );
      allow delete: if request.auth != null && request.auth.uid == resource.data.creatorId;
    }
    
    // Allow authenticated users to read and write their own progress
    match /challenges/{challengeId}/progress/{userId} {
      allow read: if request.auth != null && (request.auth.uid == userId || request.auth.uid == get(/databases/$(database)/documents/challenges/$(challengeId)).data.creatorId);
      allow write: if request.auth != null && request.auth.uid == userId;
    }
    
    // Allow authenticated users to read and write chat messages
    match /chats/{chatId}/messages/{messageId} {
      allow read: if request.auth != null;
      allow create: if request.auth != null && request.auth.uid == request.resource.data.senderId;
    }
    
    // Default deny all other documents
    match /{document=**} {
      allow read, write: if false;
    }
  }
}
